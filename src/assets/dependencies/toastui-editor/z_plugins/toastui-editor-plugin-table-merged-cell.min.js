/*!
 * TOAST UI Editor : Table Merged Cell Plugin
 * @version 3.0.0 | Tue Jul 13 2021
 * @author NHN FE Development Lab <dl_javascript@nhn.com>
 * @license MIT
 */
!function webpackUniversalModuleDefinition(root,factory){"object"==typeof exports&&"object"==typeof module?module.exports=factory():"function"==typeof define&&define.amd?define([],factory):"object"==typeof exports?exports.toastui=factory():(root.toastui=root.toastui||{},root.toastui.Editor=root.toastui.Editor||{},root.toastui.Editor.plugin=root.toastui.Editor.plugin||{},root.toastui.Editor.plugin.tableMergedCell=factory())}(window,(function(){return function(){"use strict";var __webpack_modules__={893:function(module){function forEachArray(arr,iteratee,context){var index=0,len=arr.length;for(context=context||null;index<len&&!1!==iteratee.call(context,arr[index],index,arr);index+=1);}module.exports=forEachArray},990:function(module,__unused_webpack_exports,__webpack_require__){var forEachArray=__webpack_require__(893);function toArray(arrayLike){var arr;try{arr=Array.prototype.slice.call(arrayLike)}catch(e){arr=[],forEachArray(arrayLike,(function(value){arr.push(value)}))}return arr}module.exports=toArray}},__webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={exports:{}};return __webpack_modules__[moduleId](module,module.exports,__webpack_require__),module.exports}__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,{a:getter}),getter},__webpack_require__.d=function(exports,definition){for(var key in definition)__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},__webpack_require__.o=function(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)};var __webpack_exports__={};return function(){function getSpanInfo(content,type,oppositeType){var reSpan,parsed=new RegExp("^((?:"+oppositeType+"=[0-9]+:)?)"+type+"=([0-9]+):(.*)").exec(content),spanCount=1;return parsed&&(spanCount=parseInt(parsed[2],10),content=parsed[1]+parsed[3]),[spanCount,content]}function extendTableCellIndexWithRowspanMap(node,parent,rowspan){var prevRow=parent.prev;if(prevRow)for(var columnLen=parent.parent.parent.columns.length,i=node.startIdx;i<columnLen;i+=1){var prevRowspanCount=prevRow.rowspanMap[i];prevRowspanCount&&prevRowspanCount>1&&(parent.rowspanMap[i]=prevRowspanCount-1,i<=node.endIdx&&(node.startIdx+=1,node.endIdx+=1))}if(rowspan>1)for(var startIdx=node.startIdx,endIdx=node.endIdx,i=startIdx;i<=endIdx;i+=1)parent.rowspanMap[i]=rowspan}__webpack_require__.d(__webpack_exports__,{default:function(){return tableMergedCellPlugin}});var markdownParsers={tableRow:function(node,_a){var entering;if(_a.entering&&(node.rowspanMap={},node.prev&&!node.firstChild)){var prevRowspanMap_1=node.prev.rowspanMap;Object.keys(prevRowspanMap_1).forEach((function(key){prevRowspanMap_1[key]>1&&(node.rowspanMap[key]=prevRowspanMap_1[key]-1)}))}},tableCell:function(node,_a){var _b,_c,entering=_a.entering,parent=node.parent,prev=node.prev,stringContent=node.stringContent;if(entering){var attrs={},content=stringContent,_d=[1,1],colspan=_d[0],rowspan=_d[1];colspan=(_b=getSpanInfo(content,"@cols","@rows"))[0],rowspan=(_c=getSpanInfo(content=_b[1],"@rows","@cols"))[0],content=_c[1],node.stringContent=content,prev&&(node.startIdx=prev.endIdx+1,node.endIdx=node.startIdx),colspan>1&&(attrs.colspan=colspan,node.endIdx+=colspan-1),rowspan>1&&(attrs.rowspan=rowspan),node.attrs=attrs,extendTableCellIndexWithRowspanMap(node,parent,rowspan);var tablePart=parent.parent;"tableBody"===tablePart.type&&node.endIdx>=tablePart.parent.columns.length&&(node.ignored=!0)}}},__assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},toHTMLRenderers={tableRow:function(node,_a){var entering=_a.entering,origin=_a.origin;if(entering)return origin();var result=[];if(node.lastChild)for(var columnLen=node.parent.parent.columns.length,lastColIdx,i=node.lastChild.endIdx+1;i<columnLen;i+=1)(!node.prev||!node.prev.rowspanMap[i]||node.prev.rowspanMap[i]<=1)&&result.push({type:"openTag",tagName:"td",outerNewLine:!0},{type:"closeTag",tagName:"td",outerNewLine:!0});return result.push({type:"closeTag",tagName:"tr",outerNewLine:!0}),result},tableCell:function(node,_a){var entering=_a.entering,origin,result=(0,_a.origin)();if(node.ignored)return result;if(entering){var attributes=__assign({},node.attrs);result.attributes=__assign(__assign({},result.attributes),attributes)}return result}},DELIM_LENGH=3;function repeat(text,count){for(var result="",i=0;i<count;i+=1)result+=text;return result}function createTableHeadDelim(textContent,columnAlign){var textLen=textContent.length,leftDelim="",rightDelim="";return"left"===columnAlign?(leftDelim=":",textLen-=1):"right"===columnAlign?(rightDelim=":",textLen-=1):"center"===columnAlign&&(leftDelim=":",rightDelim=":",textLen-=2),""+leftDelim+repeat("-",Math.max(textLen,3))+rightDelim}function createDelim(node){var _a=node.attrs,rowspan=_a.rowspan,colspan=_a.colspan,spanInfo="";return rowspan&&(spanInfo="@rows="+rowspan+":"),colspan&&(spanInfo="@cols="+colspan+":"+spanInfo),{delim:"| "+spanInfo}}var toMarkdownRenderers={tableHead:function(nodeInfo){var row=nodeInfo.node.firstChild,delim="";return row&&row.forEach((function(_a){var textContent=_a.textContent,attrs=_a.attrs,headDelim=createTableHeadDelim(textContent,attrs.align);if(delim+="| "+headDelim+" ",attrs.colspan)for(var i=0;i<attrs.colspan-1;i+=1)delim+="| "+headDelim+" "})),{delim:delim}},tableHeadCell:function(nodeInfo){return createDelim(nodeInfo.node)},tableBodyCell:function(nodeInfo){return createDelim(nodeInfo.node)}};function addLangs(i18n){i18n.setLanguage(["ko","ko-KR"],{"Merge cells":"셀 병합","Split cells":"셀 병합해제","Cannot change part of merged cell":"병합된 셀의 일부를 변경할 수 없습니다.","Cannot paste row merged cells into the table header":"테이블 헤더에는 행 병합된 셀을 붙여넣을 수 없습니다."}),i18n.setLanguage(["en","en-US"],{"Merge cells":"Merge cells","Split cells":"Split cells","Cannot change part of merged cell":"Cannot change part of merged cell.","Cannot paste row merged cells into the table header":"Cannot paste row merged cells into the table header."}),i18n.setLanguage(["es","es-ES"],{"Merge cells":"Combinar celdas","Split cells":"Separar celdas","Cannot change part of merged cell":"No se puede cambiar parte de una celda combinada.","Cannot paste row merged cells into the table header":"No se pueden pegar celdas combinadas en el encabezado de tabla."}),i18n.setLanguage(["ja","ja-JP"],{"Merge cells":"セルの結合","Split cells":"セルの結合を解除","Cannot change part of merged cell":"結合されたセルの一部を変更することはできません。","Cannot paste row merged cells into the table header":"行にマージされたセルをヘッダーに貼り付けることはできません。"}),i18n.setLanguage(["nl","nl-NL"],{"Merge cells":"Cellen samenvoegen","Split cells":"Samengevoegde cellen ongedaan maken","Cannot change part of merged cell":"Kan geen deel uit van een samengevoegde cel veranderen.","Cannot paste row merged cells into the table header":"Kan geen rij met samengevoegde cellen in de koptekst plakken."}),i18n.setLanguage("zh-CN",{"Merge cells":"合并单元格","Split cells":"取消合并单元格","Cannot change part of merged cell":"无法更改合并单元格的一部分。","Cannot paste row merged cells into the table header":"无法将行合并单元格粘贴到标题中。"}),i18n.setLanguage(["de","de-DE"],{"Merge cells":"Zellen zusammenführen","Split cells":"Zusammenführen rückgängig machen","Cannot change part of merged cell":"Der Teil der verbundenen Zelle kann nicht geändert werden.","Cannot paste row merged cells into the table header":"Die Zeile der verbundenen Zellen kann nicht in die Kopfzeile eingefügt werden."}),i18n.setLanguage(["ru","ru-RU"],{"Merge cells":"Объединить ячейки","Split cells":"Разъединить ячейки","Cannot change part of merged cell":"Вы не можете изменять часть комбинированной ячейки.","Cannot paste row merged cells into the table header":"Вы не можете вставлять объединенные ячейки в заголовок таблицы."}),i18n.setLanguage(["fr","fr-FR"],{"Merge cells":"Fusionner les cellules","Split cells":"Séparer les cellules","Cannot change part of merged cell":"Impossible de modifier une partie de la cellule fusionnée.","Cannot paste row merged cells into the table header":"Impossible de coller les cellules fusionnées dans l'en-tête du tableau."}),i18n.setLanguage(["uk","uk-UA"],{"Merge cells":"Об'єднати комірки","Split cells":"Роз'єднати комірки","Cannot change part of merged cell":"Ви не можете змінювати частину комбінованої комірки.","Cannot paste row merged cells into the table header":"Ви не можете вставляти об'єднані комірки в заголовок таблиці."}),i18n.setLanguage(["tr","tr-TR"],{"Merge cells":"Hücreleri birleştir","Split cells":"Hücreleri ayır","Cannot change part of merged cell":"Birleştirilmiş hücrelerin bir kısmı değiştirelemez.","Cannot paste row merged cells into the table header":"Satırda birleştirilmiş hücreler sütun başlığına yapıştırılamaz"}),i18n.setLanguage(["fi","fi-FI"],{"Merge cells":"Yhdistä solut","Split cells":"Jaa solut","Cannot change part of merged cell":"Yhdistettyjen solujen osaa ei voi muuttaa","Cannot paste row merged cells into the table header":"Soluja ei voi yhdistää taulukon otsikkoriviin"}),i18n.setLanguage(["cs","cs-CZ"],{"Merge cells":"Spojit buňky","Split cells":"Rozpojit buňky","Cannot change part of merged cell":"Nelze měnit část spojené buňky","Cannot paste row merged cells into the table header":"Nelze vkládat spojené buňky do záhlaví tabulky"}),i18n.setLanguage("ar",{"Merge cells":"دمج الوحدات","Split cells":"إلغاء دمج الوحدات","Cannot change part of merged cell":"لا يمكن تغيير جزء من الخلية المدموجة","Cannot paste row merged cells into the table header":"لا يمكن لصق الخلايا المدموجة من صف واحد في رأس الجدول"}),i18n.setLanguage(["pl","pl-PL"],{"Merge cells":"Scal komórki","Split cells":"Rozłącz komórki","Cannot change part of merged cell":"Nie można zmienić części scalonej komórki.","Cannot paste row merged cells into the table header":"Nie można wkleić komórek o scalonym rzędzie w nagłówek tabeli."}),i18n.setLanguage("zh-TW",{"Merge cells":"合併儲存格","Split cells":"取消合併儲存格","Cannot change part of merged cell":"無法變更儲存格的一部分。","Cannot paste row merged cells into the table header":"無法將合併的儲存格貼上至表格標題中。"}),i18n.setLanguage(["gl","gl-ES"],{"Merge cells":"Combinar celas","Split cells":"Separar celas","Cannot change part of merged cell":"Non se pode cambiar parte dunha cela combinada","Cannot paste row merged cells into the table header":"Non se poden pegar celas no encabezado da táboa"}),i18n.setLanguage(["sv","sv-SE"],{"Merge cells":"Sammanfoga celler","Split cells":"Dela celler","Cannot change part of merged cell":"Ej möjligt att ändra en del av en sammanfogad cell","Cannot paste row merged cells into the table header":"Ej möjligt att klistra in rad-sammanfogade celler i tabellens huvud"}),i18n.setLanguage(["it","it-IT"],{"Merge cells":"Unisci celle","Split cells":"Separa celle","Cannot change part of merged cell":"Non è possibile modificare parte di una cella unita","Cannot paste row merged cells into the table header":"Non è possibile incollare celle unite per riga nell'intestazione della tabella"}),i18n.setLanguage(["nb","nb-NO"],{"Merge cells":"Slå sammen celler","Split cells":"Separer celler","Cannot change part of merged cell":"Kan ikke endre deler av sammenslåtte celler","Cannot paste row merged cells into the table header":"Kan ikke lime inn rad med sammenslåtte celler"}),i18n.setLanguage(["hr","hr-HR"],{"Merge cells":"Spoji ćelije","Split cells":"Odspoji ćelije","Cannot change part of merged cell":"Ne mogu mijenjati dio spojene ćelije.","Cannot paste row merged cells into the table header":"Ne mogu zaljepiti redak spojenih ćelija u zaglavlje tablice"})}var tableOffsetMapMixin_assign=function(){return(tableOffsetMapMixin_assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},offsetMapMixin={extendedRowspan:function(rowIdx,colIdx){var rowspanInfo=this.rowInfo[rowIdx].rowspanMap[colIdx];return!!rowspanInfo&&rowspanInfo.startSpanIdx!==rowIdx},extendedColspan:function(rowIdx,colIdx){var colspanInfo=this.rowInfo[rowIdx].colspanMap[colIdx];return!!colspanInfo&&colspanInfo.startSpanIdx!==colIdx},getRowspanCount:function(rowIdx,colIdx){var rowspanInfo=this.rowInfo[rowIdx].rowspanMap[colIdx];return rowspanInfo?rowspanInfo.count:0},getColspanCount:function(rowIdx,colIdx){var colspanInfo=this.rowInfo[rowIdx].colspanMap[colIdx];return colspanInfo?colspanInfo.count:0},decreaseColspanCount:function(rowIdx,colIdx){var colspanInfo=this.rowInfo[rowIdx].colspanMap[colIdx],startColspanInfo=this.rowInfo[rowIdx].colspanMap[colspanInfo.startSpanIdx];return startColspanInfo.count-=1,startColspanInfo.count},decreaseRowspanCount:function(rowIdx,colIdx){var rowspanInfo=this.rowInfo[rowIdx].rowspanMap[colIdx],startRowspanInfo=this.rowInfo[rowspanInfo.startSpanIdx].rowspanMap[colIdx];return startRowspanInfo.count-=1,startRowspanInfo.count},getColspanStartInfo:function(rowIdx,colIdx){var colspanMap=this.rowInfo[rowIdx].colspanMap,colspanInfo=colspanMap[colIdx];if(colspanInfo){var startSpanIdx=colspanInfo.startSpanIdx,cellInfo=this.rowInfo[rowIdx][startSpanIdx];return{node:this.table.nodeAt(cellInfo.offset-1),pos:cellInfo.offset,startSpanIdx:startSpanIdx,count:colspanMap[startSpanIdx].count}}return null},getRowspanStartInfo:function(rowIdx,colIdx){var rowspanMap,rowspanInfo=this.rowInfo[rowIdx].rowspanMap[colIdx];if(rowspanInfo){var startSpanIdx=rowspanInfo.startSpanIdx,cellInfo=this.rowInfo[startSpanIdx][colIdx];return{node:this.table.nodeAt(cellInfo.offset-1),pos:cellInfo.offset,startSpanIdx:startSpanIdx,count:this.rowInfo[startSpanIdx].rowspanMap[colIdx].count}}return null},getSpannedOffsets:function(selectionInfo){for(var startRowIdx=selectionInfo.startRowIdx,startColIdx=selectionInfo.startColIdx,endRowIdx=selectionInfo.endRowIdx,endColIdx=selectionInfo.endColIdx,rowIdx=endRowIdx;rowIdx>=startRowIdx;rowIdx-=1)if(this.rowInfo[rowIdx])for(var _a=this.rowInfo[rowIdx],rowspanMap=_a.rowspanMap,colspanMap=_a.colspanMap,colIdx=endColIdx;colIdx>=startColIdx;colIdx-=1){var rowspanInfo=rowspanMap[colIdx],colspanInfo=colspanMap[colIdx];rowspanInfo&&(startRowIdx=Math.min(startRowIdx,rowspanInfo.startSpanIdx)),colspanInfo&&(startColIdx=Math.min(startColIdx,colspanInfo.startSpanIdx))}for(var rowIdx=startRowIdx;rowIdx<=endRowIdx;rowIdx+=1)if(this.rowInfo[rowIdx])for(var _b=this.rowInfo[rowIdx],rowspanMap=_b.rowspanMap,colspanMap=_b.colspanMap,colIdx=startColIdx;colIdx<=endColIdx;colIdx+=1){var rowspanInfo=rowspanMap[colIdx],colspanInfo=colspanMap[colIdx];rowspanInfo&&(endRowIdx=Math.max(endRowIdx,rowIdx+rowspanInfo.count-1)),colspanInfo&&(endColIdx=Math.max(endColIdx,colIdx+colspanInfo.count-1))}return{startRowIdx:startRowIdx,startColIdx:startColIdx,endRowIdx:endRowIdx,endColIdx:endColIdx}}};function extendPrevRowspan(prevRowInfo,rowInfo){var rowspanMap=rowInfo.rowspanMap,colspanMap=rowInfo.colspanMap,prevRowspanMap=prevRowInfo.rowspanMap,prevColspanMap=prevRowInfo.colspanMap;Object.keys(prevRowspanMap).forEach((function(key){var colIdx=Number(key),prevRowspanInfo=prevRowspanMap[colIdx];if((null==prevRowspanInfo?void 0:prevRowspanInfo.count)>1){var prevColspanInfo=prevColspanMap[colIdx],count=prevRowspanInfo.count,startSpanIdx=prevRowspanInfo.startSpanIdx;rowspanMap[colIdx]={count:count-1,startSpanIdx:startSpanIdx},colspanMap[colIdx]=prevColspanInfo,rowInfo[colIdx]=tableOffsetMapMixin_assign(tableOffsetMapMixin_assign({},prevRowInfo[colIdx]),{extended:!0}),rowInfo.length+=1}}))}function extendPrevColspan(rowspan,colspan,rowIdx,colIdx,rowInfo){for(var rowspanMap=rowInfo.rowspanMap,colspanMap=rowInfo.colspanMap,i=1;i<colspan;i+=1)colspanMap[colIdx+i]={count:colspan-i,startSpanIdx:colIdx},rowspan>1&&(rowspanMap[colIdx+i]={count:rowspan,startSpanIdx:rowIdx}),rowInfo[colIdx+i]=tableOffsetMapMixin_assign({},rowInfo[colIdx]),rowInfo.length+=1}var createOffsetMapMixin=function(headOrBody,startOffset,startFromBody){void 0===startFromBody&&(startFromBody=!1);var cellInfoMatrix=[],beInBody="tableBody"===headOrBody.type.name;return headOrBody.forEach((function(row,rowOffset,rowIdx){var rowIdxInWholeTable=beInBody&&!startFromBody?rowIdx+1:rowIdx,prevRowInfo=cellInfoMatrix[rowIdx-1],rowInfo={rowspanMap:{},colspanMap:{},length:0};prevRowInfo&&extendPrevRowspan(prevRowInfo,rowInfo),row.forEach((function(_a,cellOffset){for(var _b,_c,nodeSize=_a.nodeSize,attrs=_a.attrs,colspan=null!==(_b=attrs.colspan)&&void 0!==_b?_b:1,rowspan=null!==(_c=attrs.rowspan)&&void 0!==_c?_c:1,colIdx=0;rowInfo[colIdx];)colIdx+=1;rowInfo[colIdx]={offset:startOffset+rowOffset+cellOffset+2,nodeSize:nodeSize},rowInfo.length+=1,rowspan>1&&(rowInfo.rowspanMap[colIdx]={count:rowspan,startSpanIdx:rowIdxInWholeTable}),colspan>1&&(rowInfo.colspanMap[colIdx]={count:colspan,startSpanIdx:colIdx},extendPrevColspan(rowspan,colspan,rowIdxInWholeTable,colIdx,rowInfo))})),cellInfoMatrix.push(rowInfo)})),cellInfoMatrix},toArray=__webpack_require__(990),toArray_default=__webpack_require__.n(toArray),TABLE_CELL_SELECT_CLASS=".toastui-editor-cell-selected";function hasSpanAttr(tableCell){return Number(tableCell.getAttribute("colspan"))>1||Number(tableCell.getAttribute("rowspan"))>1}function hasSpanningCell(headOrBody){return toArray_default()(headOrBody.querySelectorAll(TABLE_CELL_SELECT_CLASS)).some(hasSpanAttr)}function isCellSelected(headOrBody){return!!headOrBody.querySelectorAll(TABLE_CELL_SELECT_CLASS).length}function createMergedTableContextMenu(context,tableCell){var i18n=context.i18n,eventEmitter=context.eventEmitter,headOrBody=tableCell.parentElement.parentElement,mergedTableContextMenu=[];return isCellSelected(headOrBody)&&mergedTableContextMenu.push({label:i18n.get("Merge cells"),onClick:function(){return eventEmitter.emit("command","mergeCells")},className:"merge-cells"}),(hasSpanAttr(tableCell)||hasSpanningCell(headOrBody))&&mergedTableContextMenu.push({label:i18n.get("Split cells"),onClick:function(){return eventEmitter.emit("command","splitCells")},className:"split-cells"}),mergedTableContextMenu}function addMergedTableContextMenu(context){context.eventEmitter.listen("contextmenu",(function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var _a=args[0],menuGroups=_a.menuGroups,tableCell=_a.tableCell,mergedTableContextMenu=createMergedTableContextMenu(context,tableCell);mergedTableContextMenu.length&&menuGroups.splice(2,0,mergedTableContextMenu)}))}var util_assign=function(){return(util_assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},Direction;function findNodeBy(pos,condition){for(var depth=pos.depth;depth>=0;){var node=pos.node(depth);if(condition(node,depth))return{node:node,depth:depth,offset:depth>0?pos.before(depth):0};depth-=1}return null}function findCell(pos){return findNodeBy(pos,(function(_a){var type=_a.type;return"tableHeadCell"===type.name||"tableBodyCell"===type.name}))}function getResolvedSelection(selection,context){if(selection instanceof context.pmState.TextSelection){var $anchor=selection.$anchor,foundCell=findCell($anchor);if(foundCell){var anchor=$anchor.node(0).resolve($anchor.before(foundCell.depth));return{anchor:anchor,head:anchor}}}var _a=selection,startCell,endCell;return{anchor:_a.startCell,head:_a.endCell}}function getRowAndColumnCount(_a){var startRowIdx=_a.startRowIdx,startColIdx=_a.startColIdx,endRowIdx,endColIdx;return{rowCount:_a.endRowIdx-startRowIdx+1,columnCount:_a.endColIdx-startColIdx+1}}function setAttrs(cell,attrs){return util_assign(util_assign({},cell.attrs),attrs)}function getCellSelectionClass(selection){var proto;return Object.getPrototypeOf(selection).constructor}function createDummyCells(columnCount,rowIdx,schema,attrs){void 0===attrs&&(attrs=null);for(var _a=schema.nodes,tableHeadCell=_a.tableHeadCell,tableBodyCell=_a.tableBodyCell,paragraph=_a.paragraph,cell=0===rowIdx?tableHeadCell:tableBodyCell,cells=[],index=0;index<columnCount;index+=1)cells.push(cell.create(attrs,paragraph.create()));return cells}function createMergeCellsCommand(context,OffsetMap){var FragmentClass=context.pmModel.Fragment,mergeCells;return function(_,state,dispatch){var selection=state.selection,tr=state.tr,_a=getResolvedSelection(selection,context),anchor=_a.anchor,head=_a.head;if(!anchor||!head||!selection.isCellSelection)return!1;var map=OffsetMap.create(anchor),CellSelection=getCellSelectionClass(selection),totalRowCount=map.totalRowCount,totalColumnCount=map.totalColumnCount,selectionInfo=map.getRectOffsets(anchor,head),_b=getRowAndColumnCount(selectionInfo),rowCount=_b.rowCount,columnCount=_b.columnCount,startRowIdx=selectionInfo.startRowIdx,startColIdx=selectionInfo.startColIdx,endRowIdx=selectionInfo.endRowIdx,endColIdx=selectionInfo.endColIdx,allSelected,hasTableHead;if(rowCount>=totalRowCount-1&&columnCount===totalColumnCount||0===startRowIdx&&endRowIdx>startRowIdx)return!1;for(var fragment=FragmentClass.empty,rowIdx=startRowIdx;rowIdx<=endRowIdx;rowIdx+=1)for(var colIdx=startColIdx;colIdx<=endColIdx;colIdx+=1)if(rowIdx===startRowIdx&&colIdx===startColIdx)fragment=appendFragment(rowIdx,colIdx,fragment,map);else if(!map.extendedRowspan(rowIdx,colIdx)&&!map.extendedColspan(rowIdx,colIdx)){var _c=map.getCellInfo(rowIdx,colIdx),offset=_c.offset,nodeSize=_c.nodeSize,from=tr.mapping.map(offset),to=from+nodeSize;fragment=appendFragment(rowIdx,colIdx,fragment,map),tr.delete(from,to)}var _d=map.getNodeAndPos(startRowIdx,startColIdx),node=_d.node,pos=_d.pos;return setSpanToRootCell(tr,fragment,{startNode:node,startPos:pos,rowCount:rowCount,columnCount:columnCount}),tr.setSelection(new CellSelection(tr.doc.resolve(pos))),dispatch(tr),!0}}function setSpanToRootCell(tr,fragment,rangeInfo){var startNode=rangeInfo.startNode,startPos=rangeInfo.startPos,rowCount=rangeInfo.rowCount,columnCount=rangeInfo.columnCount;tr.setNodeMarkup(startPos,null,setAttrs(startNode,{colspan:columnCount,rowspan:rowCount})),fragment.size&&tr.replaceWith(startPos+1,startPos+startNode.content.size,fragment)}function appendFragment(rowIdx,colIdx,fragment,map){var targetFragment=map.getNodeAndPos(rowIdx,colIdx).node.content;return targetFragment.size>2?fragment.append(targetFragment):fragment}function getColspanEndIdx(rowIdx,colIdx,map){var endColIdx=colIdx;if(!map.extendedRowspan(rowIdx,colIdx)&&map.extendedColspan(rowIdx,colIdx)){var _a=map.getColspanStartInfo(rowIdx,colIdx),startSpanIdx,count;endColIdx=_a.startSpanIdx+_a.count}return endColIdx}function judgeInsertToNextRow(map,mappedPos,rowIdx,colIdx){var totalColumnCount=map.totalColumnCount;return map.extendedRowspan(rowIdx,colIdx)&&map.extendedRowspan(rowIdx,totalColumnCount-1)&&mappedPos===map.posAt(rowIdx,totalColumnCount-1)}function createSplitCellsCommand(context,OffsetMap){var splitCells;return function(_,state,dispatch,view){var selection=state.selection,tr=state.tr,_a=getResolvedSelection(selection,context),anchor=_a.anchor,head=_a.head;if(!anchor||!head)return!1;for(var map=OffsetMap.create(anchor),selectionInfo=map.getRectOffsets(anchor,head),startRowIdx=selectionInfo.startRowIdx,startColIdx=selectionInfo.startColIdx,endRowIdx=selectionInfo.endRowIdx,endColIdx=selectionInfo.endColIdx,lastCellPos=-1,rowIdx=startRowIdx;rowIdx<=endRowIdx;rowIdx+=1)for(var colIdx=startColIdx;colIdx<=endColIdx;colIdx+=1)if(map.extendedRowspan(rowIdx,colIdx)||map.extendedColspan(rowIdx,colIdx)){var node=map.getNodeAndPos(rowIdx,colIdx).node,colspanEndIdx=getColspanEndIdx(rowIdx,colIdx,map),mappedPos=map.posAt(rowIdx,colspanEndIdx),pos=tr.mapping.map(mappedPos);judgeInsertToNextRow(map,mappedPos,rowIdx,colspanEndIdx)&&(pos+=2),lastCellPos=Math.max(pos,lastCellPos),tr.insert(pos,node.type.createAndFill(setAttrs(node,{colspan:null,rowspan:null})))}else{var _b=map.getNodeAndPos(rowIdx,colIdx),node=_b.node,pos=_b.pos;lastCellPos=Math.max(tr.mapping.map(pos),lastCellPos),tr.setNodeMarkup(tr.mapping.map(pos),null,setAttrs(node,{colspan:null,rowspan:null}))}return dispatch(tr),setCellSelection(view,selection,OffsetMap,map.tableStartOffset,selectionInfo),!0}}function setCellSelection(view,selection,OffsetMap,tableStartPos,selectionInfo){if(selection.isCellSelection){var tr=view.state.tr,CellSelection=getCellSelectionClass(selection),startRowIdx=selectionInfo.startRowIdx,startColIdx=selectionInfo.startColIdx,endRowIdx=selectionInfo.endRowIdx,endColIdx=selectionInfo.endColIdx,map=OffsetMap.create(tr.doc.resolve(tableStartPos)),startOffset=map.getCellInfo(startRowIdx,startColIdx).offset,endOffset=map.getCellInfo(endRowIdx,endColIdx).offset;tr.setSelection(new CellSelection(tr.doc.resolve(startOffset),tr.doc.resolve(endOffset))),view.dispatch(tr)}}function createRemoveColumnCommand(context,OffsetMap){var removeColumn;return function(_,state,dispatch){var selection=state.selection,tr=state.tr,_a=getResolvedSelection(selection,context),anchor=_a.anchor,head=_a.head;if(!anchor||!head)return!1;var map=OffsetMap.create(anchor),selectionInfo=map.getRectOffsets(anchor,head),totalColumnCount=map.totalColumnCount,totalRowCount=map.totalRowCount,columnCount,selectedAllColumn;if(getRowAndColumnCount(selectionInfo).columnCount===totalColumnCount)return!1;for(var startColIdx=selectionInfo.startColIdx,endColIdx=selectionInfo.endColIdx,mapStart=tr.mapping.maps.length,rowIdx=0;rowIdx<totalRowCount;rowIdx+=1)for(var colIdx=endColIdx;colIdx>=startColIdx;colIdx-=1){var _b=map.getCellInfo(rowIdx,colIdx),offset=_b.offset,nodeSize=_b.nodeSize,colspanInfo=map.getColspanStartInfo(rowIdx,colIdx);if(!map.extendedRowspan(rowIdx,colIdx))if((null==colspanInfo?void 0:colspanInfo.count)>1){var _c=map.getColspanStartInfo(rowIdx,colIdx),node=_c.node,pos=_c.pos,colspan=map.decreaseColspanCount(rowIdx,colIdx),attrs=setAttrs(node,{colspan:colspan>1?colspan:null});tr.setNodeMarkup(tr.mapping.slice(mapStart).map(pos),null,attrs)}else{var from=tr.mapping.slice(mapStart).map(offset),to=from+nodeSize;tr.delete(from,to)}}return dispatch(tr),!0}}function getRowRanges(map,rowIdx){for(var totalColumnCount=map.totalColumnCount,from=Number.MAX_VALUE,to=0,colIdx=0;colIdx<totalColumnCount;colIdx+=1)if(!map.extendedRowspan(rowIdx,colIdx)){var _a=map.getCellInfo(rowIdx,colIdx),offset=_a.offset,nodeSize=_a.nodeSize;from=Math.min(from,offset),to=Math.max(to,offset+nodeSize)}return{from:from,to:to}}function createRemoveRowCommand(context,OffsetMap){var removeRow;return function(_,state,dispatch){var selection=state.selection,tr=state.tr,_a=getResolvedSelection(selection,context),anchor=_a.anchor,head=_a.head;if(anchor&&head){var map=OffsetMap.create(anchor),totalRowCount=map.totalRowCount,totalColumnCount=map.totalColumnCount,selectionInfo=map.getRectOffsets(anchor,head),rowCount=getRowAndColumnCount(selectionInfo).rowCount,startRowIdx=selectionInfo.startRowIdx,endRowIdx=selectionInfo.endRowIdx,selectedThead,selectedAllTbodyRow;if(rowCount===totalRowCount-1||0===startRowIdx)return!1;for(var rowIdx=endRowIdx;rowIdx>=startRowIdx;rowIdx-=1){var mapStart=tr.mapping.maps.length,_b=getRowRanges(map,rowIdx),from=_b.from,to=_b.to;tr.delete(from-1,to+1);for(var colIdx=0;colIdx<totalColumnCount;colIdx+=1){var rowspanInfo=map.getRowspanStartInfo(rowIdx,colIdx);if((null==rowspanInfo?void 0:rowspanInfo.count)>1&&!map.extendedColspan(rowIdx,colIdx))if(map.extendedRowspan(rowIdx,colIdx)){var _c=map.getRowspanStartInfo(rowIdx,colIdx),node=_c.node,pos=_c.pos,rowspan=map.decreaseRowspanCount(rowIdx,colIdx),attrs=setAttrs(node,{rowspan:rowspan>1?rowspan:null});tr.setNodeMarkup(tr.mapping.slice(mapStart).map(pos),null,attrs)}else if(!map.extendedRowspan(rowIdx,colIdx)){var _d=map.getRowspanStartInfo(rowIdx,colIdx),node=_d.node,count=_d.count,attrs=setAttrs(node,{rowspan:count>2?count-1:null}),copiedCell=node.type.create(attrs,node.content);tr.insert(tr.mapping.slice(mapStart).map(map.posAt(rowIdx+1,colIdx)),copiedCell)}}map=OffsetMap.create(tr.doc.resolve(map.tableStartOffset))}return dispatch(tr),!0}return!1}}function getTargetRowInfo(direction,map,selectionInfo){var targetRowIdx,judgeToExtendRowspan,insertColIdx,nodeSize;return direction===Direction.UP?(targetRowIdx=selectionInfo.startRowIdx,judgeToExtendRowspan=function(colIdx){return map.extendedRowspan(targetRowIdx,colIdx)},insertColIdx=0,nodeSize=-1):(targetRowIdx=selectionInfo.endRowIdx,judgeToExtendRowspan=function(colIdx){return map.getRowspanCount(targetRowIdx,colIdx)>1},insertColIdx=map.totalColumnCount-1,nodeSize=map.extendedRowspan(targetRowIdx,insertColIdx)?2:map.getCellInfo(targetRowIdx,insertColIdx).nodeSize+1),{targetRowIdx:targetRowIdx,judgeToExtendRowspan:judgeToExtendRowspan,insertColIdx:insertColIdx,nodeSize:nodeSize}}function createAddRowCommand(context,OffsetMap,direction){var addRow;return function(_,state,dispatch){var selection=state.selection,schema=state.schema,tr=state.tr,_a=getResolvedSelection(selection,context),anchor=_a.anchor,head=_a.head;if(!anchor||!head)return!1;var map=OffsetMap.create(anchor),totalColumnCount=map.totalColumnCount,selectionInfo=map.getRectOffsets(anchor,head),rowCount=getRowAndColumnCount(selectionInfo).rowCount,_b=getTargetRowInfo(direction,map,selectionInfo),targetRowIdx=_b.targetRowIdx,judgeToExtendRowspan=_b.judgeToExtendRowspan,insertColIdx=_b.insertColIdx,nodeSize=_b.nodeSize,selectedThead;if(0===targetRowIdx)return!1;for(var rows=[],from=tr.mapping.map(map.posAt(targetRowIdx,insertColIdx))+nodeSize,cells=[],colIdx=0;colIdx<totalColumnCount;colIdx+=1)if(judgeToExtendRowspan(colIdx)){var _c=map.getRowspanStartInfo(targetRowIdx,colIdx),node=_c.node,pos=_c.pos,attrs=setAttrs(node,{rowspan:node.attrs.rowspan+rowCount});tr.setNodeMarkup(tr.mapping.map(pos),null,attrs)}else cells=cells.concat(createDummyCells(1,targetRowIdx,schema));for(var i=0;i<rowCount;i+=1)rows.push(schema.nodes.tableRow.create(null,cells));return dispatch(tr.insert(from,rows)),!0}}function getTargetColInfo(direction,map,selectionInfo){var targetColIdx,judgeToExtendColspan,insertColIdx;return direction===Direction.LEFT?(judgeToExtendColspan=function(rowIdx){return map.extendedColspan(rowIdx,targetColIdx)},insertColIdx=targetColIdx=selectionInfo.startColIdx):(judgeToExtendColspan=function(rowIdx){return map.getColspanCount(rowIdx,targetColIdx)>1},insertColIdx=(targetColIdx=selectionInfo.endColIdx)+1),{targetColIdx:targetColIdx,judgeToExtendColspan:judgeToExtendColspan,insertColIdx:insertColIdx}}function createAddColumnCommand(context,OffsetMap,direction){var addColumn;return function(_,state,dispatch){var selection=state.selection,tr=state.tr,schema=state.schema,_a=getResolvedSelection(selection,context),anchor=_a.anchor,head=_a.head;if(!anchor||!head)return!1;for(var map=OffsetMap.create(anchor),selectionInfo=map.getRectOffsets(anchor,head),_b=getTargetColInfo(direction,map,selectionInfo),targetColIdx=_b.targetColIdx,judgeToExtendColspan=_b.judgeToExtendColspan,insertColIdx=_b.insertColIdx,columnCount=getRowAndColumnCount(selectionInfo).columnCount,totalRowCount=map.totalRowCount,rowIdx=0;rowIdx<totalRowCount;rowIdx+=1)if(judgeToExtendColspan(rowIdx)){var _c=map.getColspanStartInfo(rowIdx,targetColIdx),node=_c.node,pos=_c.pos,attrs=setAttrs(node,{colspan:node.attrs.colspan+columnCount});tr.setNodeMarkup(tr.mapping.map(pos),null,attrs)}else{var cells=createDummyCells(columnCount,rowIdx,schema);tr.insert(tr.mapping.map(map.posAt(rowIdx,insertColIdx)),cells)}return dispatch(tr),!0}}function createCommands(context,OffsetMap){return{mergeCells:createMergeCellsCommand(context,OffsetMap),splitCells:createSplitCellsCommand(context,OffsetMap),addRowToUp:createAddRowCommand(context,OffsetMap,Direction.UP),addRowToDown:createAddRowCommand(context,OffsetMap,Direction.DOWN),removeRow:createRemoveRowCommand(context,OffsetMap),addColumnToLeft:createAddColumnCommand(context,OffsetMap,Direction.LEFT),addColumnToRight:createAddColumnCommand(context,OffsetMap,Direction.RIGHT),removeColumn:createRemoveColumnCommand(context,OffsetMap)}}function tableMergedCellPlugin(context){var i18n=context.i18n,eventEmitter,TableOffsetMap=context.eventEmitter.emitReduce("mixinTableOffsetMapPrototype",offsetMapMixin,createOffsetMapMixin);return addLangs(i18n),addMergedTableContextMenu(context),{toHTMLRenderers:toHTMLRenderers,markdownParsers:markdownParsers,toMarkdownRenderers:toMarkdownRenderers,wysiwygCommands:createCommands(context,TableOffsetMap)}}!function(Direction){Direction.LEFT="left",Direction.RIGHT="right",Direction.UP="up",Direction.DOWN="down"}(Direction||(Direction={}))}(),__webpack_exports__=__webpack_exports__.default}()}));