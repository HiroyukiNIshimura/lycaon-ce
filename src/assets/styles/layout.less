@footer-height: 40px;
@container-md-max-width: 1100px;

[v-cloak] {
  display: block;
  padding: 50px 0;
}

@keyframes spinner {
  to {
    transform: rotate(360deg);
  }
}

[v-cloak]:before {
  content: '';
  box-sizing: border-box;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 30px;
  height: 30px;
  margin-top: -10px;
  margin-left: -10px;
  border-radius: 50%;
  border: 2px solid #ccc;
  border-top-color: #333;
  animation: spinner 0.6s linear infinite;
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}

[v-cloak] > * {
  display: none;
}

html,
body {
  padding: 0;
  margin: 0;
  height: 100%;
}

@media screen and (max-width: 768px) {
  html,
  body {
    -webkit-overflow-scrolling: touch !important;
    //overflow: auto;
    height: 100%;
  }
  body {
    //position: relative;
    overflow-x: auto;
    min-height: 100%;
  }
}

main {
  position: relative; /*←相対位置*/
  padding-bottom: 120px; /*←footerの高さ*/
  box-sizing: border-box; /*←全て含めてmin-height:100vhに*/
  min-height: 100vh;
  margin-top: 21%;
}

.container {
  padding-top: 1rem;
}
footer.page-footer {
  position: absolute; /*←絶対位置*/
  bottom: 0; /*下に固定*/
  width: 100%;
}
@media (min-width: 576px) {
  main {
    margin-top: 15%;
  }
}

@media (min-width: 768px) {
  main {
    margin-top: 12%;
  }
}

@media (min-width: 992px) {
  main {
    margin-top: 8%;
  }
}

@media (min-width: 1200px) {
  main {
    margin-top: 6%;
  }
}

.scrollTop-btn {
  position: fixed;
  right: 1.5em;
  bottom: 3em;
  width: 36px;
  height: 36px;
  line-height: 36px;
  text-align: center;
  border-radius: 50%;
  background: #5bc8ac;
  z-index: 999;
}

.scrollTop-btn-icon {
  color: #fff;
  font-size: 16px;
}

.drop-area {
  height: 100%;
  border: 5px solid gray;
  border-radius: 15px;
}

.dragEnter {
  border: 10px dotted powderblue;
}

.tagify {
  border-radius: 0.25rem;
}
.tagify__input {
  overflow: hidden;
  text-overflow: ellipsis;
}

@media (max-width: 576px) {
  .tagify {
    --placeholder-color: transparent;
    --placeholder-color-focus: transparent;
  }
}
.tags-look .tagify__dropdown__item {
  display: inline-block;
  border-radius: 3px;
  padding: 0.3em 0.5em;
  border: 1px solid #ccc;
  background: #f3f3f3;
  margin: 0.2em;
  font-size: 0.85em;
  color: black;
  transition: 0s;
}

.tags-look .tagify__dropdown__item--active {
  color: black;
}

.tags-look .tagify__dropdown__item:hover {
  background: lightyellow;
  border-color: gold;
}

img.user-icon {
  width: 42px;
  height: 42px;
}
img.user-icon-sm {
  width: 36px;
  height: 36px;
}
svg.user-icon {
  width: 42px;
  height: 42px;
}
svg.user-icon-sm {
  width: 36px;
  height: 36px;
}

.blink {
  animation: blinkAnime 3.5s infinite alternate;
}
@keyframes blinkAnime {
  0% {
    color: #1a1aff;
  }
  100% {
    color: #ff7f7f;
  }
}

.md-form label.md-textarea-label {
  top: -0.5rem;
}

.query-hits {
  background-color: rgba(255, 244, 86, 0.774);
}
.query-hits-title {
  color: deepskyblue;
}

.score-color-0 {
  color: #e03114;
}
.score-color-1 {
  color: #ffa500;
}
.score-color-2 {
  color: #4fe02c;
}
.score-color-3 {
  color: #4169e1;
}
.score-color-4 {
  color: #000080;
}

.fotter-policy {
  font-size: small;
}

.input-error-message {
  margin-top: 0.25rem;
  color: #dc3545;
  font-size: 80%;
}

.file-list {
  list-style: none;
}

.img-file-list {
  width: 100px;
  height: auto;
  margin-right: 0.5rem;
}

.ProseMirror,
.toastui-editor-defaultUI,
.toastui-editor,
.toastui-editor-contents {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Helvetica Neue', Arial, 'Kosugi Maru', 'Noto Sans',
    sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  font-size: 1rem;
  code,
  pre {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Helvetica Neue', Arial, 'Kosugi Maru', 'Noto Sans',
      sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
    font-size: 1rem;
  }
}
.toastui-editor-tooltip {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Helvetica Neue', Arial, 'Kosugi Maru', 'Noto Sans',
    sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  font-size: 0.8rem;
}

/* Toastui bugfix --> */
.toastui-editor-popup-color .tui-colorpicker-container div.tui-colorpicker-clearfix {
  width: initial;
}
.toastui-editor-popup-body input[type='text'].tui-colorpicker-palette-hex {
  width: 102px;
}
.toastui-editor-popup-color .tui-colorpicker-container .tui-colorpicker-palette-preview {
  margin-top: 4px;
}
.toastui-editor-popup-add-image .toastui-editor-file-select-button {
  width: initial;
}
.toastui-editor-defaultUI .toastui-editor-close-button,
.toastui-editor-defaultUI .toastui-editor-ok-button {
  width: initial;
  min-width: 63px;
}
/* <-- Toastui bugfix */

.hit-active {
  background-color: yellow;
}

.comment-tip .tooltip .tooltip-inner {
  background-color: #82d9fc;
  border: 1px solid #82d9fc;
  color: black;
}

.comment-tip .bs-tooltip-auto[x-placement^='bottom'] .arrow::before,
.tooltip.fade.bs-tooltip-bottom.show .arrow::before {
  bottom: 0;
  border-width: 0 0.4rem 0.4rem;
  border-bottom-color: #82d9fc;
}

.comment-tip .tooltip.top .tooltip-arrow {
  border-top-color: #82d9fc;
}

.dot-elastic {
  position: relative;
  width: 10px;
  height: 10px;
  border-radius: 5px;
  background-color: #baadf5;
  color: #baadf5;
  animation: dotElastic 1s infinite linear;
}

.dot-elastic::before,
.dot-elastic::after {
  content: '';
  display: inline-block;
  position: absolute;
  top: 0;
}

.dot-elastic::before {
  left: -15px;
  width: 10px;
  height: 10px;
  border-radius: 5px;
  background-color: #baadf5;
  color: #baadf5;
  animation: dotElasticBefore 1s infinite linear;
}

.dot-elastic::after {
  left: 15px;
  width: 10px;
  height: 10px;
  border-radius: 5px;
  background-color: #baadf5;
  color: #baadf5;
  animation: dotElasticAfter 1s infinite linear;
}

@keyframes dotElasticBefore {
  0% {
    transform: scale(1, 1);
  }
  25% {
    transform: scale(1, 1.5);
  }
  50% {
    transform: scale(1, 0.67);
  }
  75% {
    transform: scale(1, 1);
  }
  100% {
    transform: scale(1, 1);
  }
}

@keyframes dotElastic {
  0% {
    transform: scale(1, 1);
  }
  25% {
    transform: scale(1, 1);
  }
  50% {
    transform: scale(1, 1.5);
  }
  75% {
    transform: scale(1, 1);
  }
  100% {
    transform: scale(1, 1);
  }
}

@keyframes dotElasticAfter {
  0% {
    transform: scale(1, 1);
  }
  25% {
    transform: scale(1, 1);
  }
  50% {
    transform: scale(1, 0.67);
  }
  75% {
    transform: scale(1, 1.5);
  }
  100% {
    transform: scale(1, 1);
  }
}
